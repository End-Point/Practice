<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.shoppingmall</groupId>
    <artifactId>config-client</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>config-client</name>
    <description>springcloud 统一配置-client</description>

    <parent>
        <groupId>com.shoppingmall</groupId>
        <artifactId>shoppingmall</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <dependencies>
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
            <version>RELEASE</version>
            <scope>compile</scope>
        </dependency>-->

        <!--注意：如果在测试时，启动报错：
           Error creating bean with name 'scopedTarget.configTest': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'neo.hello' in value "${neo.hello}"
           可能是依赖有问题，换下边的依赖试试。-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--因为客户端无法主动从服务端获取配置信息，导致客户端和远程仓库配置信息不一致的问题，该功能就是可以让客户端主动从服务端获取配置
           信息，让客户端配置信息和远程仓库保持一致。缺点是每次都需要访问/refresh接口手动刷新。
           spring-boot-starter-actuator是一套监控的功能，可以监控程序在运行时状态，其中就包括/refresh【刷新】的功能，还需要在接口类中加上
           @RefreshScope注解
           -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>


        <!--如果要向eureka注册，必须引入eureka-client 的jar包，否则在配置文件中无法使用注册功能。
        配置文件警告信息为：Cannot resolve configuration property 'eureka.client.service-url.defaultZone' 就是无法解析配置属性-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
